#!/bin/sh

########################
##### decalrations #####
########################

##### wallpaper #####
change_wallpaper() {
    swww img "$filename" --transition-type grow --transition-pos 0,0 --transition-step 255 --transition-fps 255 --transition-duration 1
}

firefox_theme() {
    pywalfox update
    printf "firefox done\n"
}

##### discord #####
discord_theme() {
    cp $HOME/.cache/wal/discord-wal.theme.css $HOME/.config/vesktop/themes/wal.theme.css
    printf "discord done\n"
}

##### steam #####
steam_theme() {
    cp $HOME/.cache/wal/colors-steam.css $HOME/.bins/Adwaita-for-Steam/custom/custom.css
    # generally requires restart in order to change theme.
    cd $HOME/.bins/Adwaita-for-Steam/
    ./install.py --custom-css
    printf "steam done\n"
}

##### waybar #####
waybar_theme() {
    killall -SIGUSR2 waybar
    printf "waybar done\n"
}

##### swaync #####
swaync_theme() {
    swaync-client -rs
    swaync-client -R
    printf "swaync done\n"
}

##### hyprland #####
hyprland_theme() {
    $HOME/.bins/hyprColors
    printf "hyprland done\n"
}

##### gtk2, gtk3, qt5, qt6 #####
gtk_qt_theme() {
    python /opt/oomox/plugins/base16/cli.py /opt/oomox/plugins/base16/templates/gtk4-oodwaita/templates/gtk.mustache $HOME/.cache/wal/colors-oomox > ~/.config/gtk-4.0/gtk.css
    /opt/oomox/plugins/theme_oomox/change_color.sh $HOME/.cache/wal/colors-oomox
    gsettings set org.gnome.desktop.interface gtk-theme oomox-colors-oomox
    printf "oomox and gradience (gtk+qt) done\n"
}

##### telegram #####
telegram_theme() {
    wal-telegram --wal -t
    printf "telegram done\n"
}

##### alacritty #####
alacritty_theme() {
    $HOME/.bins/alacrittyColors $HOME/.config/alacritty/alacritty.yml
    printf "alacritty done\n"
}

##### StartPage #####
StartPage_theme() {
    sed -i "s@#.*/\*walcolorA\*/@$(cat $HOME/.cache/wal/colors-kitty.conf | grep -e '^color0' | awk '{print $2}'); /\*walcolorA\*/@g" $HOME/Documents/git/StartPage/style.css
    sed -i "s@#.*/\*walcolorB\*/@$(cat $HOME/.cache/wal/colors-kitty.conf | grep -e '^color2' | awk '{print $2}'); /\*walcolorB\*/@g" $HOME/Documents/git/StartPage/style.css
    printf "StartPage done\n"
}

side_apps() {
    discord_theme &
    steam_theme &
    waybar_theme &
    swaync_theme &
    hyprland_theme &
    gtk_qt_theme &
    telegram_theme &
    alacritty_theme &
    StartPage_theme &
}

#######################
##### main script #####
#######################

# if no argument is provided, launch ranger to pick a wallpaper and rofi to pick a backend
if [ -z $1 ]; then
    notify-send "Wallpaper" "Press 'P' to choose.\n <- and -> to select" --urgency LOW
    filename="$(imv $HOME/Pictures/wallpaper)"
    printf "filename: $filename\n"
    if [ -z "$filename" ]; then
        printf "no file provided\n"
        notify-send "Wallpaper" "No file provided" --urgency LOW
        exit 1
    else
        notify-send "Wallpaper" "File : $filename" --urgency LOW
    fi

    mkdir /tmp/wallpaper 2>/dev/null

    for back in wal haishoku schemer2 colorz colorthief; do
        wal -n -s -t -e -i "$filename" --backend "$back"
        bash -c "$(cat $HOME/.cache/wal/imagemagick) /tmp/wallpaper/$back.png"
    done

    wal -n -s -t -e -i "$(cat $HOME/.bins/wallpaperpath)"

    back="$(basename $(imv /tmp/wallpaper))"
    printf "backend: $back\n"
    if [ -z "$back" ]; then
        printf "no backend provided\n"
        notify-send "Wallpaper" "No backend provided\n 'wal' will be used by default" --urgency LOW
        backend="wal"
    else 
        backend="${back%.*}"
        notify-send "Wallpaper" "Backend: $backend" --urgency LOW
    fi

elif [[ $1 == "--random" ]]; then
    filename="$(find $HOME/Pictures/wallpaper -regex '.*\.png\|.*\.jpg\|.*\.jpeg' | shuf -n 1)"
    backend="wal"
else    
    filename="$1"
    backend="wal"
fi

# change early so you don't feel a lag
change_wallpaper &

##### pywal #####
wal -n -i "$filename" --backend $backend
printf "wal done\n"

# run other customizations after wal has generated a theme
side_apps

# remember wallpaper for reload
echo "$filename" > $HOME/.bins/wallpaperpath
printf "wallpaper remembered in $HOME/.bins/wallpaperpath\n"

notify-send "Wallpaper" "Set colors and themes to match wallpaper: $filename" --urgency LOW -i $filename
